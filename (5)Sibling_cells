###################
#FigSS6
##################


svim reads --nanopore BmNY_svim /home/kshoji/Gawain/NGSdata/220914_BmY_MinION.fastq.gz /home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa            # align Nanopore reads with ngmlr, then call SVs
この結果をBmY_variants.vcf


R
library(Biostrings)
data <- read.table("BmY_variants.vcf")
genome <- readDNAStringSet("/home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa")
snvlist <- unlist(strsplit(as.character(data[,3]),"\\."))[(1:nrow(data))*3-1]

data2 <- data[snvlist=="BND",]

sa <- data2[2:nrow(data2),2]-data2[1:(nrow(data2)-1),2]

BNDlist <- cbind(as.character(data2[1:(nrow(data2)-1),5][sa < 100 & sa > 0]),as.character(data2[2:nrow(data2),5][sa < 100& sa > 0]),
as.character(data2[1:(nrow(data2)-1),1][sa < 100& sa > 0]),
as.character(data2[1:(nrow(data2)-1),2][sa < 100& sa > 0]),
as.character(data2[2:nrow(data2),2][sa < 100& sa > 0]))



a1 <- unlist(strsplit(unlist(strsplit(BNDlist[,1],":")),"Bomo_"))[(1:nrow(BNDlist))*3-1]
a2 <- unlist(strsplit(unlist(strsplit(BNDlist[,2],":")),"Bomo_"))[(1:nrow(BNDlist))*3-1]

sum(a1==a2)

BNDlist2 <- BNDlist[a1==a2,]

BNDlist3a <- cbind(BNDlist2[substr(BNDlist2[,1],1,2) == "N[" & substr(BNDlist2[,2],1,2) =="]B",],"+")
BNDlist3b <- cbind(BNDlist2[substr(BNDlist2[,1],1,2) == "N]" & substr(BNDlist2[,2],1,2) =="[B",c(2,1,3,4,5)],"-")
BNDlist3c <- cbind(BNDlist2[substr(BNDlist2[,1],1,2) == "]B" & substr(BNDlist2[,2],1,2) =="N[",c(2,1,3,5,4)],"+")
BNDlist3d <- cbind(BNDlist2[substr(BNDlist2[,1],1,2) == "[B" & substr(BNDlist2[,2],1,2) =="N]",c(1,2,3,5,4)],"-")
BNDlist3p <- list(BNDlist3a,BNDlist3b,BNDlist3c,BNDlist3d)

BNDlist4p <- list()
for(i in 1:4){
BNDlist4p[[i]] <- data.frame(cbind(BNDlist3p[[i]][,3:5],
unlist(strsplit(gsub("N|\\[|\\]", "", BNDlist3p[[i]][,1]),":"))[(1:nrow(BNDlist3p[[i]]))*2-1],
unlist(strsplit(gsub("N|\\[|\\]", "", BNDlist3p[[i]][,1]),":"))[(1:nrow(BNDlist3p[[i]]))*2],
unlist(strsplit(gsub("N|\\[|\\]", "", BNDlist3p[[i]][,2]),":"))[(1:nrow(BNDlist3p[[i]]))*2],
BNDlist3p[[i]][,6]))
}
BNDlist4 <- rbind(BNDlist4p[[1]],BNDlist4p[[2]],BNDlist4p[[3]],BNDlist4p[[4]])

BNDlist5 <- BNDlist4[as.numeric(as.character(BNDlist4[,6]))-as.numeric(as.character(BNDlist4[,5])) >0,]

BNDlist6 <- BNDlist5[as.numeric(as.character(BNDlist5[,6]))-as.numeric(as.character(BNDlist5[,5])) < 10^4 & as.numeric(as.character(BNDlist5[,6]))-as.numeric(as.character(BNDlist5[,5])) > 10^2,]
colnames(BNDlist6) <- c("dest_chr","dest_start","dest_end","source_chr","source_start","source_end","source_strand")

write.table(BNDlist6,"221025_BmY_newins_locilist.txt",quote=F,sep="\t",row.names=T,col.names=T)
#write.table(BNDlist5,"221025_BmY_newins_locilist_len0.txt",quote=F,sep="\t",row.names=T,col.names=T)

R
library(Biostrings)
data <- read.table("BmQ_variants.vcf")
genome <- readDNAStringSet("/home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa")
snvlist <- unlist(strsplit(as.character(data[,3]),"\\."))[(1:nrow(data))*3-1]

data2 <- data[snvlist=="BND",]

sa <- data2[2:nrow(data2),2]-data2[1:(nrow(data2)-1),2]

BNDlist <- cbind(as.character(data2[1:(nrow(data2)-1),5][sa < 100 & sa > 0]),as.character(data2[2:nrow(data2),5][sa < 100& sa > 0]),
as.character(data2[1:(nrow(data2)-1),1][sa < 100& sa > 0]),
as.character(data2[1:(nrow(data2)-1),2][sa < 100& sa > 0]),
as.character(data2[2:nrow(data2),2][sa < 100& sa > 0]))



a1 <- unlist(strsplit(unlist(strsplit(BNDlist[,1],":")),"Bomo_"))[(1:nrow(BNDlist))*3-1]
a2 <- unlist(strsplit(unlist(strsplit(BNDlist[,2],":")),"Bomo_"))[(1:nrow(BNDlist))*3-1]

sum(a1==a2)

BNDlist2 <- BNDlist[a1==a2,]

BNDlist3a <- cbind(BNDlist2[substr(BNDlist2[,1],1,2) == "N[" & substr(BNDlist2[,2],1,2) =="]B",],"+")
BNDlist3b <- cbind(BNDlist2[substr(BNDlist2[,1],1,2) == "N]" & substr(BNDlist2[,2],1,2) =="[B",c(2,1,3,4,5)],"-")
BNDlist3c <- cbind(BNDlist2[substr(BNDlist2[,1],1,2) == "]B" & substr(BNDlist2[,2],1,2) =="N[",c(2,1,3,5,4)],"+")
BNDlist3d <- cbind(BNDlist2[substr(BNDlist2[,1],1,2) == "[B" & substr(BNDlist2[,2],1,2) =="N]",c(1,2,3,5,4)],"-")
BNDlist3p <- list(BNDlist3a,BNDlist3b,BNDlist3c,BNDlist3d)

BNDlist4p <- list()
for(i in 1:4){
BNDlist4p[[i]] <- data.frame(cbind(BNDlist3p[[i]][,3:5],
unlist(strsplit(gsub("N|\\[|\\]", "", BNDlist3p[[i]][,1]),":"))[(1:nrow(BNDlist3p[[i]]))*2-1],
unlist(strsplit(gsub("N|\\[|\\]", "", BNDlist3p[[i]][,1]),":"))[(1:nrow(BNDlist3p[[i]]))*2],
unlist(strsplit(gsub("N|\\[|\\]", "", BNDlist3p[[i]][,2]),":"))[(1:nrow(BNDlist3p[[i]]))*2],
BNDlist3p[[i]][,6]))
}
BNDlist4 <- rbind(BNDlist4p[[1]],BNDlist4p[[2]],BNDlist4p[[3]],BNDlist4p[[4]])

BNDlist5 <- BNDlist4[as.numeric(as.character(BNDlist4[,6]))-as.numeric(as.character(BNDlist4[,5])) >0,]

BNDlist6 <- BNDlist5[as.numeric(as.character(BNDlist5[,6]))-as.numeric(as.character(BNDlist5[,5])) < 10^4 & as.numeric(as.character(BNDlist5[,6]))-as.numeric(as.character(BNDlist5[,5])) > 10^2,]
colnames(BNDlist6) <- c("dest_chr","dest_start","dest_end","source_chr","source_start","source_end","source_strand")

write.table(BNDlist6,"221025_BmQ_newins_locilist.txt",quote=F,sep="\t",row.names=T,col.names=T)



R
library(Biostrings)
genome <- readDNAStringSet("/home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa")
table<-read.table("221025_BmQ_newins_locilist.txt")

fasB <- list()
fasA <- list()
fas <- list()
fasC <- list()
fasI <- list()
for(i in 1:nrow(table)){
fasB[i] <- substr(genome[table[i,1]],table[i,2]-5000,table[i,2])
fasA[i] <- substr(genome[table[i,1]],table[i,3],table[i,3]+5000)
fasC[i] <- substr(genome[table[i,4]],table[i,5],table[i,6])
if(table[i,7]=="-"){
fasC[i] <- as.character(reverseComplement(DNAStringSet(substr(genome[table[i,4]],table[i,5],table[i,6]))))
}
if(table[i,2]-5000 < 0){
cat("error1")
}
if(table[i,3]+5000 > width(genome[table[i,1]]) ){
cat("error2")
}
fas[i] <- substr(genome[table[i,1]],table[i,2]-5000,table[i,3]+5000)
cat(i)
}

AFT <- DNAStringSet(paste0(unlist(fasB),unlist(fasC),unlist(fasA)))
BEF <- DNAStringSet(unlist(fas))
INS <- DNAStringSet(unlist(fasC))
names(AFT) <- paste0("AFT",1:nrow(table))
names(BEF) <- paste0("BEF",1:nrow(table))
names(INS) <- paste0("INS",1:nrow(table))
writeXStringSet(BEF,"221025_BmQ_newins_BEF.fas")
writeXStringSet(AFT,"221025_BmQ_newins_AFT.fas")
writeXStringSet(INS,"221025_BmQ_newins_INS.fas")


R
library(Biostrings)
genome <- readDNAStringSet("/home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa")
table<-read.table("221025_BmY_newins_locilist.txt")

fasB <- list()
fasA <- list()
fas <- list()
fasC <- list()
fasI <- list()
for(i in 1:nrow(table)){
fasB[i] <- substr(genome[table[i,1]],table[i,2]-5000,table[i,2])
fasA[i] <- substr(genome[table[i,1]],table[i,3],table[i,3]+5000)
fasC[i] <- substr(genome[table[i,4]],table[i,5],table[i,6])
if(table[i,7]=="-"){
fasC[i] <- as.character(reverseComplement(DNAStringSet(substr(genome[table[i,4]],table[i,5],table[i,6]))))
}
if(table[i,2]-5000 < 0){
cat("error1")
}
if(table[i,3]+5000 > width(genome[table[i,1]]) ){
cat("error2")
}
fas[i] <- substr(genome[table[i,1]],table[i,2]-5000,table[i,3]+5000)
cat(i)
}

AFT <- DNAStringSet(paste0(unlist(fasB),unlist(fasC),unlist(fasA)))
BEF <- DNAStringSet(unlist(fas))
INS <- DNAStringSet(unlist(fasC))
names(AFT) <- paste0("AFT",1:nrow(table))
names(BEF) <- paste0("BEF",1:nrow(table))
names(INS) <- paste0("INS",1:nrow(table))
writeXStringSet(BEF,"221025_BmY_newins_BEF.fas")
writeXStringSet(AFT,"221025_BmY_newins_AFT.fas")
writeXStringSet(INS,"221025_BmY_newins_INS.fas")



makeblastdb -in 221025_BmY_newins_INS.fas -dbtype nucl -hash_index
makeblastdb -in 221025_BmQ_newins_INS.fas -dbtype nucl -hash_index


blastn -num_threads 8 -query 221025_BmY_newins_INS.fas -db 221025_BmY_newins_INS.fas -max_target_seqs 19900000 -evalue 0.01 -outfmt "7 qseqid sseqid length mismatch gapopen qstart qend sstart send evalue qseq sseq"  -out 221025_BmY_newins_INS_INS_blastn.out
blastn -num_threads 8 -query 221025_BmY_newins_INS.fas -db /home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa -max_target_seqs 19900000 -evalue 0.01 -outfmt "7 qseqid sseqid length mismatch gapopen qstart qend sstart send evalue qseq sseq"  -out 221025_BmY_newins_INS_BomoGenome_blastn.out
blastn -num_threads 8 -query 221025_BmQ_newins_INS.fas -db 221025_BmQ_newins_INS.fas -max_target_seqs 19900000 -evalue 0.01 -outfmt "7 qseqid sseqid length mismatch gapopen qstart qend sstart send evalue qseq sseq"  -out 221025_BmQ_newins_INS_INS_blastn.out
blastn -num_threads 8 -query 221025_BmQ_newins_INS.fas -db /home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa -max_target_seqs 19900000 -evalue 0.01 -outfmt "7 qseqid sseqid length mismatch gapopen qstart qend sstart send evalue qseq sseq"  -out 221025_BmQ_newins_INS_BomoGenome_blastn.out




R
library(Biostrings)
table<-read.table("221025_BmQ_newins_locilist.txt")
INSname <- paste0("INS",1:597)
INS <- readDNAStringSet("221025_BmQ_newins_INS.fas")
genome <- readDNAStringSet("/home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa")
iin <- read.table("221025_BmQ_newins_INS_INS_blastn.out")
ign <- read.table("221025_BmQ_newins_INS_BomoGenome_blastn.out")

threshold <- 1e-100
iin2 <- iin[iin[,10]<threshold,]
VEC <- matrix(0,nrow(table),2)
VEC[,2] <- width(INS)
rownames(VEC) <- INSname
j <- 1
for(i in 1:nrow(VEC)){
if(VEC[i]==0){
clus <- paste0("cluster_tmp",sprintf("%03d",j))
VEC[as.character(iin2[iin2[,1]==INSname[i],2]),1] <- clus
if(sum(iin2[,1]==INSname[i])<1){
VEC[i] <- clus
}
j<- j+1
}else{
VEC[as.character(iin2[iin2[,1]==INSname[i],2]),1]  <- VEC[i]
}
cat(i)
}

Cnames <- names(sort(table(VEC[,1]),decreasing=T))
Nnames <- paste0("group_",sprintf("%03d",1:length(Cnames)))
for(i in 1:length(Cnames)){
VEC[VEC[,1]==Cnames[i],1] <- Nnames[i]
}

ign2 <- ign[ign[,10]<threshold,]

ign2[is.element(ign2[,1],rownames(VEC)[VEC[,1]=="cluster68"]),1:10]


OUT1 <- data.frame(cbind(table(factor(ign2[,1],levels=INSname)),
tapply(ign2[,3],factor(ign2[,1],levels=INSname),sum),
VEC))
colnames(OUT1) <- c("Similar_sites","Similar_area","cluster","length")

write.table(OUT1,"221025_BmQ_ins_cluster_size.txt",sep="\t",quote=F)



R
library(Biostrings)
table<-read.table("221025_BmY_newins_locilist.txt")
INS <- readDNAStringSet("221025_BmY_newins_INS.fas")
INSname <- paste0("INS",1:length(INS))

genome <- readDNAStringSet("/home/kshoji/Gawain/REFdata/Bomo_genome_assembly.fa")
iin <- read.table("221025_BmY_newins_INS_INS_blastn.out")
ign <- read.table("221025_BmY_newins_INS_BomoGenome_blastn.out")

threshold <- 1e-100
iin2 <- iin[iin[,10]<threshold,]
VEC <- matrix(0,nrow(table),2)
VEC[,2] <- width(INS)
rownames(VEC) <- INSname
j <- 1
for(i in 1:nrow(VEC)){
if(VEC[i]==0){
clus <- paste0("cluster_tmp",sprintf("%03d",j))
VEC[as.character(iin2[iin2[,1]==INSname[i],2]),1] <- clus
if(sum(iin2[,1]==INSname[i])<1){
VEC[i] <- clus
}
j<- j+1
}else{
VEC[as.character(iin2[iin2[,1]==INSname[i],2]),1]  <- VEC[i]
}
cat(i)
}

Cnames <- names(sort(table(VEC[,1]),decreasing=T))
Nnames <- paste0("group_",sprintf("%03d",1:length(Cnames)))
for(i in 1:length(Cnames)){
VEC[VEC[,1]==Cnames[i],1] <- Nnames[i]
}

ign2 <- ign[ign[,10]<threshold,]

ign2[is.element(ign2[,1],rownames(VEC)[VEC[,1]=="cluster68"]),1:10]


OUT1 <- data.frame(cbind(table(factor(ign2[,1],levels=INSname)),
tapply(ign2[,3],factor(ign2[,1],levels=INSname),sum),
VEC))
colnames(OUT1) <- c("Similar_sites","Similar_area","cluster","length")

write.table(OUT1,"221025_BmY_ins_cluster_size.txt",sep="\t",quote=F)





 bwa index 221025_BmY_newins_BEF.fas
 bwa index 221025_BmQ_newins_BEF.fas
 bwa index 221025_BmY_newins_AFT.fas
 bwa index 221025_BmQ_newins_AFT.fas

#BmY data
NN="BmY_newins_BEF BmQ_newins_BEF BmY_newins_AFT BmQ_newins_AFT"
for N in  ${NN}; do
bwa mem -x ont2d -t 20 221025_${N}.fas /home/kshoji/Gawain/NGSdata/220914_BmY_MinION.fastq.gz > 221025_BmY_MinION_${N}_bwamem.sam
samtools view -@ 20 -bS 221025_BmY_MinION_${N}_bwamem.sam  > 221025_BmY_MinION_${N}_bwamem.bam
bamToBed -i 221025_BmY_MinION_${N}_bwamem.bam -split > 221025_BmY_MinION_${N}_bwamem.bed
done

#BmQ data
NN="BmY_newins_BEF BmQ_newins_BEF BmY_newins_AFT BmQ_newins_AFT"
for N in  ${NN}; do
bwa mem -x ont2d -t 20 221025_${N}.fas /home/kshoji/Gawain/NGSdata/191113BmN4genome_MINION.fastq.gz > 221025_BmQ_MinION_${N}_bwamem.sam
samtools view -@ 20 -bS 221025_BmQ_MinION_${N}_bwamem.sam  > 221025_BmQ_MinION_${N}_bwamem.bam
bamToBed -i 221025_BmQ_MinION_${N}_bwamem.bam -split > 221025_BmQ_MinION_${N}_bwamem.bed
done




R
library(ggplot2)
library(RColorBrewer)

sizY <- read.table("221025_BmY_ins_cluster_size.txt")
sizQ <- read.table("221025_BmQ_ins_cluster_size.txt")

AFTQY <- read.table("221025_BmQ_MinION_BmY_newins_AFT_bwamem.bed")
BEFQY <- read.table("221025_BmQ_MinION_BmY_newins_BEF_bwamem.bed")
AFTYY <- read.table("221025_BmY_MinION_BmY_newins_AFT_bwamem.bed")
BEFYY <- read.table("221025_BmY_MinION_BmY_newins_BEF_bwamem.bed")

AFTQQ <- read.table("221025_BmQ_MinION_BmQ_newins_AFT_bwamem.bed")
BEFQQ <- read.table("221025_BmQ_MinION_BmQ_newins_BEF_bwamem.bed")
AFTYQ <- read.table("221025_BmY_MinION_BmQ_newins_AFT_bwamem.bed")
BEFYQ <- read.table("221025_BmY_MinION_BmQ_newins_BEF_bwamem.bed")

AFTYref <- paste0("AFT",(1:466)[sizY[,3]=="group_002"])
BEFYref <- paste0("BEF",(1:466)[sizY[,3]=="group_002"])
AFTQref <- paste0("AFT",(1:597)[sizQ[,3]=="group_002"])
BEFQref <- paste0("BEF",(1:597)[sizQ[,3]=="group_002"])

AFTYref <- paste0("AFT",c(366,235,9,244,384,147,400,260,272,38,435,307,314,205,334,341,105))
BEFYref <- paste0("BEF",c(366,235,9,244,384,147,400,260,272,38,435,307,314,205,334,341,105))
AFTQref <- paste0("AFT",c(276,440,287,153,158,162,26,298,319,320,182,44,488,193,57,512,205,530,535,84,395,559,565,568,124,261))
BEFQref <- paste0("BEF",c(276,440,287,153,158,162,26,298,319,320,182,44,488,193,57,512,205,530,535,84,395,559,565,568,124,261))



AFTQQ2 <- AFTQQ[is.element(AFTQQ[,1],AFTQref),]
BEFQQ2 <- BEFQQ[is.element(BEFQQ[,1],BEFQref),]
AFTYQ2 <- AFTYQ[is.element(AFTYQ[,1],AFTQref),]
BEFYQ2 <- BEFYQ[is.element(BEFYQ[,1],BEFQref),]

AFTQY2 <- AFTQY[is.element(AFTQY[,1],AFTYref),]
BEFQY2 <- BEFQY[is.element(BEFQY[,1],BEFYref),]
AFTYY2 <- AFTYY[is.element(AFTYY[,1],AFTYref),]
BEFYY2 <- BEFYY[is.element(BEFYY[,1],BEFYref),]

AFTQY2out <- table(factor(AFTQY2[AFTQY2[,2] < 4900 & AFTQY2[,3] > 5100& AFTQY2[,3] < 5100 + 8900,1],levels=AFTYref))
BEFQY2out <- table(factor(BEFQY2[BEFQY2[,2] < 4900 & BEFQY2[,3] > 5100& BEFQY2[,3] < 5100 + 8900,1],levels=BEFYref))
AFTYY2out <- table(factor(AFTYY2[AFTYY2[,2] < 4900 & AFTYY2[,3] > 5100& AFTYY2[,3] < 5100 + 8900,1],levels=AFTYref))
BEFYY2out <- table(factor(BEFYY2[BEFYY2[,2] < 4900 & BEFYY2[,3] > 5100& BEFYY2[,3] < 5100 + 8900,1],levels=BEFYref))

AFTQQ2out <- table(factor(AFTQQ2[AFTQQ2[,2] < 4900 & AFTQQ2[,3] > 5100& AFTQQ2[,3] < 5100 + 8900,1],levels=AFTQref))
BEFQQ2out <- table(factor(BEFQQ2[BEFQQ2[,2] < 4900 & BEFQQ2[,3] > 5100& BEFQQ2[,3] < 5100 + 8900,1],levels=BEFQref))
AFTYQ2out <- table(factor(AFTYQ2[AFTYQ2[,2] < 4900 & AFTYQ2[,3] > 5100& AFTYQ2[,3] < 5100 + 8900,1],levels=AFTQref))
BEFYQ2out <- table(factor(BEFYQ2[BEFYQ2[,2] < 4900 & BEFYQ2[,3] > 5100& BEFYQ2[,3] < 5100 + 8900,1],levels=BEFQref))

QY <-  data.frame("Inserts"=c(rep("Presence",length(AFTQY2out)),rep("Absence",length(AFTQY2out))),
                     "position"=rep(1:length(AFTQY2out),2),
                     "ratio"=c(AFTQY2out/(AFTQY2out+BEFQY2out),BEFQY2out/(AFTQY2out+BEFQY2out)))
YY <-  data.frame("Inserts"=c(rep("Presence",length(AFTYY2out)),rep("Absence",length(AFTYY2out))),
                     "position"=rep(1:length(AFTYY2out),2),
                     "ratio"=c(AFTYY2out/(AFTYY2out+BEFYY2out),BEFYY2out/(AFTYY2out+BEFYY2out)))
QQ <-  data.frame("Inserts"=c(rep("Presence",length(AFTQQ2out)),rep("Absence",length(AFTQQ2out))),
                     "position"=rep(1:length(AFTQQ2out),2),
                     "ratio"=c(AFTQQ2out/(AFTQQ2out+BEFQQ2out),BEFQQ2out/(AFTQQ2out+BEFQQ2out)))
YQ <-  data.frame("Inserts"=c(rep("Presence",length(AFTYQ2out)),rep("Absence",length(AFTYQ2out))),
                     "position"=rep(1:length(AFTYQ2out),2),
                     "ratio"=c(AFTYQ2out/(AFTYQ2out+BEFYQ2out),BEFYQ2out/(AFTYQ2out+BEFYQ2out)))


g <- ggplot(QY, aes(x = position, y = ratio, fill = Inserts))
g <- g + geom_bar(stat = "identity", position = "fill")+ theme_bw(base_size = 15, base_family = "Helvetica")
g <- g + scale_fill_brewer(palette = "Set3") + labs(title="BmQ genome",x="insert sites",y="Ratio")+scale_x_continuous(breaks = c(1,10,20,30,40,50,60),labels=c(1,10,20,30,40,50,60))
ggsave(file = "221109_Qdata_Yins_PresenceAbsence.pdf", plot = g, width = 6, height = 2.5)

g <- ggplot(YY, aes(x = position, y = ratio, fill = Inserts))
g <- g + geom_bar(stat = "identity", position = "fill")+ theme_bw(base_size = 15, base_family = "Helvetica")
g <- g + scale_fill_brewer(palette = "Set3") + labs(title="BmY genome",x="insert sites",y="Ratio")+scale_x_continuous(breaks = c(1,10,20,30,40,50,60),labels=c(1,10,20,30,40,50,60))
ggsave(file = "221109_Ydata_Yins_PresenceAbsence.pdf", plot = g, width = 6, height = 2.5)


g <- ggplot(QQ, aes(x = position, y = ratio, fill = Inserts))
g <- g + geom_bar(stat = "identity", position = "fill")+ theme_bw(base_size = 15, base_family = "Helvetica")
g <- g + scale_fill_brewer(palette = "Set3") + labs(title="BmQ genome",x="insert sites",y="Ratio")+scale_x_continuous(breaks = c(1,10,20,30,40,50,60),labels=c(1,10,20,30,40,50,60))
ggsave(file = "221109_Qdata_Qins_PresenceAbsence.pdf", plot = g, width = 6, height = 2.5)

g <- ggplot(YQ, aes(x = position, y = ratio, fill = Inserts))
g <- g + geom_bar(stat = "identity", position = "fill")+ theme_bw(base_size = 15, base_family = "Helvetica")
g <- g + scale_fill_brewer(palette = "Set3") + labs(title="BmY genome",x="insert sites",y="Ratio")+scale_x_continuous(breaks = c(1,10,20,30,40,50,60),labels=c(1,10,20,30,40,50,60))
ggsave(file = "221109_Ydata_Qins_PresenceAbsence.pdf", plot = g, width = 6, height = 2.5)
